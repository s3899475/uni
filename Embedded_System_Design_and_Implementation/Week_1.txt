Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-02-24T18:08:37+11:00

====== Week 1 ======

Floationg Point Numbers
{{./pasted_image.png}}
{{./equation.png?type=equation}}

NaN - exponent 255, mantissa non zero
infinity - exponent 255, mantissa 0

Microproccessor - external devices required
Microcontroller - can function standalone, with optional add ins such as RAM, Flash, etc.

==== Classifying embedded systems ====
=== Computer Architecture ===
RISC - Reduced Instruction Set
	* More stringent requirements on program memmory because of high throughput
		* With single-cycle execution the program memory needs to match the CPU clock as close as possible
	* Instructions are simpler so it can be easier to develop firmware
	* More memory required
CISC - Instructions can be decoded to perfor multiple operations
	* would require less memory as there are less instructions to perform an action
	* development environment is generally simpler
	* variable length execution makes optimisation difficult

=== ISA - Instruction Set Architecture ===
Memory-memory
	* operands in memory
Register-memory
	* less memory access required
	* more memory accesses can make program slower
Register-register
	* uses load/store to access memory
	* CPU registers used for temp values to increace throughput

=== Memory Interface based Classification ===
{{./pasted_image001.png}}
Harvard Architecture
	* code and data memory on seperate busses
	* next instruction can be 'fetched' from program memory whilst the CPU is reading/writing to data memory
	* can use ROM for security - can't change code

{{./pasted_image002.png}}
von Neuman Architecture
	* can be easier to work with as only one memory needs to be programmed
	* internal development is simpler
	* program and data memory must be balanced



