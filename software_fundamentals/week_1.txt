Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-07-19T00:36:32+10:00

====== week 1 ======

===== Lecture 1) =====

===== What is software engineering: =====
Software is:
* instructions (programs)
* data structures
* documentation

==== Types of software products: ====

=== Generic products ===
* Stand-alone, marketed towards everyone
* E.g. graphics programs, project management tools, CAD software, software for specific markets (e.g. appointment system for dentists)
* Specifications (requirements) for what the software should do is owned by the developer

=== Customised products ===
* Software commissioned by a specific customer to meet their own needs
* E.g - embedded control systems, etc.
* specification (requirements) owned by the customer, they make decisions on what changes are required

==== Attributes of good software ====
* Maintainability
	* Should be able to be evolved to meet the needs of customers
* Dependability and security
	* Includes reliability, security and safety
	* Should not cause physical or economic damage when it fails
	* Malicious users should not be able to access or damage the system
* Efficiency
	* Should not waste system resources.
	* Includes responsiveness, processing time, memory utilisation, etc.
* Acceptability
	* Must be acceptable for the users it is designed for
	* Must be understandable, usable and compatible with systems that users use
==== Definition of Software engineering ====
Software engineering is the systematic application of engineering approaches to the development of software



===== Software process activities: =====
* Software specification
	* customers and engineers define the software and the constraints on it
* Software development
* Software validation
* Software evolution

==== Software Engineering Fundamentals ====
* systems should be developed using a managed and understood development process
* Dependability and performance are important for all types of systems
* Understanding and managing the specification and requirements is important
* You should reuse software where appropriate


===== Ethical and professional issues for software engineers: =====
Software engineers must behave in an honest and ethically responsible way

Confidentiality
Competence - don't misrepresent it (except when they require 10 years of Carbon experience)
Intellectual property
Computer misuse - viruses bad (except when u study them)
